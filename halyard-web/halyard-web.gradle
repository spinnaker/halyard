apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.protobuf'
apply plugin: 'spinnaker.package'

ext {
  springConfigLocation = System.getProperty('spring.config.node', "${System.getProperty('user.home')}/.spinnaker/")
  repackage = System.getProperty('springBoot.repackage', "false")
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  systemProperty('spring.config.node', project.springConfigLocation)
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

tasks.withType(JavaExec) {
  if (System.getProperty('DEBUG', 'false') == 'true') {
    jvmArgs '-Xdebug', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9099'
  }
}

dependencies {
  compile spinnaker.dependency('bootActuator')
  compile spinnaker.dependency('bootWeb')
  compile spinnaker.dependency('lombok')

  compile project(':halyard-backup')
  compile project(':halyard-cli')
  compile project(':halyard-config')
  compile project(':halyard-core')
  compile project(':halyard-deploy')
  compile project(':halyard-proto')

  compile('org.lognet:grpc-spring-boot-starter:2.3.2')
  compile 'com.google.guava:guava:23.5-jre'
}

tasks.bootRepackage.enabled = Boolean.valueOf(project.repackage)

mainClassName = 'com.netflix.spinnaker.halyard.Main'

def cliScript = project.tasks.create('createCliStartScripts', CreateStartScripts) {
  dependsOn(project.tasks.startScripts)
  mainClassName = 'com.netflix.spinnaker.halyard.cli.Main'
  applicationName = 'hal'
  outputDir = project.tasks.startScripts.outputDir
  classpath = project.tasks.startScripts.classpath
}

tasks.installDist.dependsOn(cliScript)
tasks.distZip.dependsOn(cliScript)
tasks.distTar.dependsOn(cliScript)
